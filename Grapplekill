local gui = Instance.new("ScreenGui")
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.Name = "YourGUIName" -- Replace "YourGUIName" with your desired GUI name
gui.DisplayOrder = 999
gui.Parent = game:GetService("CoreGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 130)  -- Adjusted size for additional buttons
frame.Position = UDim2.new(1, -220, 0, 7)
frame.BackgroundTransparency = 0
frame.BackgroundColor3 = Color3.new(0, 0, 0)  -- Black background
frame.Parent = gui

local yOffset = 26  -- Increased to make room for the drag bar
local buttonHeight = 15
local buttonSpacing = 5

local function createToggleButton(text, toggleFunction)
    local button = Instance.new("TextButton")
    button.Text = text .. ": OFF"
    button.Size = UDim2.new(0, 180, 0, buttonHeight)
    button.Position = UDim2.new(0, 10, 0, yOffset)
    button.BackgroundTransparency = 0
    button.BackgroundColor3 = Color3.new(0, 0, 0)  -- Black background for buttons
    button.TextColor3 = Color3.new(1, 1, 1)  -- White text
    button.Parent = frame

    yOffset = yOffset + buttonHeight + buttonSpacing

    local isEnabled = false

    button.MouseButton1Click:Connect(function()
        isEnabled = not isEnabled
        button.Text = text .. ": " .. (isEnabled and "ON" or "OFF")
        toggleFunction(isEnabled)
    end)
end

-- Function to teleport Pit.Damage to the player's character and toggle size
createToggleButton("Teleport Damage", function(isEnabled)
    local damagePart = workspace:FindFirstChild("Pit") and workspace.Pit:FindFirstChild("Damage")

    if isEnabled then
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local root = character:WaitForChild("HumanoidRootPart")

        if damagePart then
            damagePart.CFrame = root.CFrame
            damagePart.Size = Vector3.new(9999999, 9999999, 9999999) -- Massive size
damagePart.Touched:Connect(function(hit)
                if hit.Parent and hit.Parent:FindFirstChild("Humanoid") then
                    hit.Parent.Humanoid.Health = 0 -- Ensure anything touched dies
                end
            end)
        else
            warn("Damage part not found in workspace.Pit!")
        end
    else
        -- Reset size and move part away when disabled
        if damagePart then
            damagePart.Size = Vector3.new(10, 10, 10) -- Reset to a safe size
            damagePart.Position = Vector3.new(0, -5000, 0) -- Move part far out of range
        end
    end
end)

-- Toggle Touch functionality
createToggleButton("Toggle Touch", function(isEnabled)
    for _, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
        if v:IsA("BasePart") then
            v.CanCollide = not isEnabled
            v.CanTouch = not isEnabled
        end
    end
end)


createToggleButton("Remove Ragdoll", function(isEnabled)
    if isEnabled then
        local LocalPlayer = game.Players.LocalPlayer
        if LocalPlayer.Character:FindFirstChild("ragdollValue") then
LocalPlayer.Character.ragdollValue:Destroy()
        end
    end
end)

createToggleButton("Boost Touch Detector Size", function(isEnabled)
    local touchDetector = game:GetService("Workspace").Map.Cool.Boosts.Jump.touchDetector
    touchDetector.Size = isEnabled and Vector3.new(400000000000000, 4000000000000000, 40000000000000) or Vector3.new(1, 1, 1)
end)

local function toggleSpeedScript(isEnabled)
    local touchDetector = game:GetService("Workspace").Map.Cool.Boosts.Speed.touchDetector
    touchDetector.Size = isEnabled and Vector3.new(200000000000000, 200000000000000000, 2000000000000000000000) or Vector3.new(1, 1, 1)
end

createToggleButton("Speed", toggleSpeedScript)

-- Draggable functionality for mobile (and desktop mouse) support
local dragging, dragInput, dragStart, startPos

-- Create the draggable bar (top part)
local dragBar = Instance.new("Frame")
dragBar.Size = UDim2.new(1, 0, 0, 20)  -- The bar you will drag (Top part of the frame)
dragBar.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
dragBar.Parent = frame

-- Function to make the GUI draggable
dragBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        input.Consumed = true
    end
end)

dragBar.InputChanged:Connect(function(input)
    if dragging then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

dragBar.InputEnded:Connect(function(input)
if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)
